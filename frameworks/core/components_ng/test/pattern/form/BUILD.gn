# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ace_unittest("form_test_ng") {
  ace_animation = true
  flutter_skia = true
  render = true
  sources = [
    # image
    "$ace_root/frameworks/core/components_ng/pattern/image/image_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_pattern.cpp",

    # select_overlay
    "$ace_root/frameworks/core/components_ng/manager/select_overlay/select_overlay_manager.cpp",
    "$ace_root/frameworks/core/components_ng/manager/select_overlay/select_overlay_proxy.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/menu/wrapper/menu_wrapper_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/select_overlay/select_overlay_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/select_overlay/select_overlay_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/select_overlay/select_overlay_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/select_overlay/select_overlay_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/select_overlay/select_overlay_property.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/menu/mock_menu_wrapper_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/popup/mock_popup_base_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/select_overlay/mock_select_overlay_node.cpp",

    #mock
    "$ace_root/frameworks/core/components_ng/test/mock/manager/drag_drop/mock_drag_drop_proxy.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/select_overlay/mock_select_overlay_content_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/form/mock/mock_form_manager_delegate.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/form/mock/mock_rosen_render_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/form/mock/mock_rs_surface_mode.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/form/mock/mock_sub_container.cpp",
    "$ace_root/test/unittest/core/pipeline/mock_drag_drop_manager.cpp",

    # other
    "$ace_root/frameworks/core/components_ng/pattern/flex/flex_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/grid_container/grid_container_layout_property.cpp",

    #self
    "$ace_root/frameworks/core/common/form_manager.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_pattern.cpp",
    "form_test_ng.cpp",
  ]

  if (is_ohos_standard_system) {
    external_deps = [
      "ability_base:want",
      "ability_runtime:app_manager",
      "bundle_framework:appexecfwk_base",
      "bundle_framework:appexecfwk_core",
      "c_utils:utils",
      "form_fwk:fmskit_native",
      "form_fwk:form_manager",
      "graphic_2d:librender_service_client",
      "input:libmmi-client",
    ]
  }
}
