# Copyright (c) 2023 iSoftStone Information Technology (Group) Co.,Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("measure_utils_test_ng") {
  module_out_path = property_test_output_path

  sources = [
    "$ace_root/frameworks/base/geometry/dimension.cpp",
    "$ace_root/frameworks/base/json/json_util.cpp",
    "$ace_root/frameworks/base/utils/string_expression.cpp",
    "$ace_root/frameworks/base/utils/string_utils.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_column_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_container_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_system_manager.cpp",
    "$ace_root/frameworks/core/components/common/layout/screen_system_manager.cpp",
    "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
    "$ace_root/frameworks/core/pipeline/base/constants.cpp",

    # components_ng
    "$ace_root/frameworks/core/components_ng/base/frame_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/ui_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/view_stack_processor.cpp",
    "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",
    "$ace_root/frameworks/core/components_ng/event/touch_event.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/gesture_referee.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/exclusive_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/gesture_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/parallel_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/recognizer_group.cpp",
    "$ace_root/frameworks/core/components_ng/layout/box_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_builder.cpp",
    "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
    "$ace_root/frameworks/core/components_ng/property/grid_property.cpp",
    "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
    "$ace_root/frameworks/core/components_ng/property/property.cpp",
    "$ace_root/frameworks/core/components_ng/syntax/for_each_node.cpp",
    "$ace_root/frameworks/core/components_ng/syntax/lazy_for_each_node.cpp",

    # mock
    "$ace_root/frameworks/base/test/mock/mock_mouse_style.cpp",
    "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_drawing_convertor.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context_creator.cpp",

    #test main
    "$ace_root/frameworks/base/geometry/animatable_dimension.cpp",
    "$ace_root/frameworks/base/geometry/matrix4.cpp",
    "$ace_root/frameworks/base/subwindow/subwindow_manager.cpp",
    "$ace_root/frameworks/base/test/mock/mock_drag_window.cpp",
    "$ace_root/frameworks/base/test/mock/mock_ressched_report.cpp",
    "$ace_root/frameworks/base/utils/base_id.cpp",
    "$ace_root/frameworks/core/animation/animator.cpp",
    "$ace_root/frameworks/core/animation/anticipate_curve.cpp",

    #test object
    "$ace_root/frameworks/core/animation/cubic_curve.cpp",
    "$ace_root/frameworks/core/animation/curves.cpp",
    "$ace_root/frameworks/core/animation/scheduler.cpp",
    "$ace_root/frameworks/core/common/ace_engine.cpp",
    "$ace_root/frameworks/core/common/clipboard/clipboard_proxy.cpp",
    "$ace_root/frameworks/core/common/container.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_ace_application_info.cpp",
    "$ace_root/frameworks/core/common/watch_dog.cpp",
    "$ace_root/frameworks/core/components/common/properties/border_image.cpp",
    "$ace_root/frameworks/core/components/common/properties/decoration.cpp",
    "$ace_root/frameworks/core/components/common/properties/shadow_config.cpp",
    "$ace_root/frameworks/core/components/test/unittest/mock/subwindow_mock.cpp",
    "$ace_root/frameworks/core/components_ng/animation/geometry_transition.cpp",
    "$ace_root/frameworks/core/components_ng/base/view_abstract.cpp",
    "$ace_root/frameworks/core/components_ng/event/click_event.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/click_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/long_press_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/multi_fingers_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/property/gradient_property.cpp",
    "$ace_root/frameworks/core/components_ng/render/render_context.cpp",
    "$ace_root/frameworks/core/components_ng/render/render_property.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_drag_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_long_press_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_pan_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_scrollable_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/scrollable_event/mock_scrollable.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/base/mock_localization.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_loading_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/manager/drag_drop/mock_drag_drop_manager.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/manager/drag_drop/mock_drag_drop_proxy.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/manager/select_overlay/mock_select_overlay_manager.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/manager/select_overlay/mock_select_overlay_proxy.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_animation_utils.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_modifier_adapter.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/image/mock_icon_theme.cpp",
    "$ace_root/frameworks/core/event/back_end_event_manager.cpp",
    "$ace_root/frameworks/core/image/image_source_info.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_base.cpp",

    # self
    "measure_utils_test_ng.cpp",
  ]

  deps = [
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$ace_root/frameworks/core/components_ng/pattern:ace_core_components_pattern_ng_ohos",
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "$cjson_root:cjson",
    "//third_party/googletest:gmock_main",
  ]
  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]
}
