# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

template("arkts_frontend") {
  forward_variables_from(invoker, "*")

  ohos_shared_library("arkts_frontend") {
    defines += invoker.defines
    configs = [ "$ace_root:ace_config" ]
    if (build_ohos_sdk) {
      deps = [ "koala_mirror/ui2abc:ui2abc" ]
    } else {
      deps = [ "koala_mirror/arkoala-arkts:arkoala" ]
    }
    deps += [ "$ace_root/build:libace_compatible" ]

    sources = [
      "ani_context_module.cpp",
      "arkts_frontend.cpp",
      "arkts_plugin_frontend.cpp",
      "entry/arkts_entry_loader.cpp",
    ]
    external_deps = [
      "hilog:libhilog",
      "runtime_core:ani",
    ]

    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    if (current_os == "ohos") {
      external_deps += [ "graphic_2d:drawing_ani" ]
    }
  }
}

template("arkts_frontend_loader") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    defines += invoker.defines
    configs = [ "$ace_root:ace_config" ]

    sources = [ "arkts_frontend_loader.cpp" ]
  }
}

foreach(item, ace_platforms) {
  arkts_frontend_loader("arkts_frontend_" + item.name) {
    defines = []
    config = {
    }

    if (defined(item.config)) {
      config = item.config
    }

    if (defined(config.defines)) {
      defines = config.defines
    }
  }

  if (item.name == "ohos") {
    arkts_frontend("arkts_frontend") {
      defines = []
      config = {
      }

      if (defined(item.config)) {
        config = item.config
      }

      if (defined(config.defines)) {
        defines = config.defines
      }
    }
  }
}
