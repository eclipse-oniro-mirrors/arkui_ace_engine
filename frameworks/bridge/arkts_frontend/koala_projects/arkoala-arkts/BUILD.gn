# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("./components.gni")

koala_root = ".."
koala_path = ""

node_version = "v16.20.2"
host_arch = "${host_os}-${host_cpu}"


action("ui2abc_annotate") {
  outputs = [ "$target_out_dir/arkui-ui2abc-processed" ]

  script = "../tools/annotate.py"

  args = [
    rebase_path("."),
    rebase_path("annotate-ui2abc-config.json")
  ]
}
action("ui2abc_process") {
  outputs = [ "$target_out_dir/ets" ]

  script = "../../arkoala/process_ui2abc.py"

  args = [
    rebase_path("."),
    # Paths: 6 ohos_ets_api_path
    rebase_path("${ohos_ets_api_path}"),
    # Paths: 7 ohos_ets_arkts_path
    rebase_path("${ohos_ets_arkts_path}"),
  ]

  deps = [
    ":ui2abc_annotate",
    ":install_all"
  ]
  external_deps = [
    "sdk:ohos_ets_api",
    "sdk:ohos_ets_arkts",
  ]  
}

action("arkoala_install") {
    script = "../gn/command/npm_util.py"
    outputs = [
        "$target_out_dir/arkoala_install"
    ]
    args = [
        "--project-path", rebase_path("."),
        "--node-path", rebase_path("//prebuilts/build-tools/common/nodejs/node-${node_version}-${host_arch}/bin"),
        "--install"
    ]
}
action("arkoala.abc") {
    script = "../gn/command/npm_util.py"
    outputs = [
        "$target_out_dir/arkoala.abc"
    ]
    args = [
        "--project-path", rebase_path("."),
        "--node-path", rebase_path("//prebuilts/build-tools/common/nodejs/node-${node_version}-${host_arch}/bin"),
        "--arklink-path", rebase_path("${static_linker_build_path}"),
        "--es2panda-path", rebase_path("${ets2abc_build_path}"),
        "--stdlib-path", rebase_path("//arkcompiler/runtime_core/static_core/plugins/ets/stdlib"),
        "--target-out-path", rebase_path("$target_out_dir"),
        "--built-file-path", rebase_path("build/arkoala.abc"),
        "--npm-args", "run", "link:arkoala:m3:gn"
    ]
    deps = [
      ":arkui.abc",
      "$koala_root/interop:interop"
    ]

}

action("arkui.abc") {
    script = "../gn/command/npm_util.py"
    outputs = [
        "$target_out_dir/arkui.abc"
    ]
    args = [
        "--project-path", rebase_path("."),
        "--node-path", rebase_path("//prebuilts/build-tools/common/nodejs/node-${node_version}-${host_arch}/bin"),
        "--arklink-path", rebase_path("${static_linker_build_path}"),
        "--es2panda-path", rebase_path("${ets2abc_build_path}"),
        "--stdlib-path", rebase_path("//arkcompiler/runtime_core/static_core/plugins/ets/stdlib"),
        "--target-out-path", rebase_path("$target_out_dir"),
        "--built-file-path", rebase_path("build/arkui.abc"),
        "--npm-args", "run", "build:arkoala:m3:gn"
    ]

    deps = [
      "$koala_root/ui2abc:ui2abc",
      "$koala_root/incremental:incremental"
    ]
}

group("install_all") {
  deps = [
    ":arkoala_install",
    "$koala_root/ui2abc:ui2abc_install",
    "$koala_root/incremental:incremental_install",
    "$koala_root/interop:interop_install"
  ]
}
ohos_prebuilt_etc("arkoala_build") {
  source = "$target_out_dir/arkoala.abc"
  deps = [ ":arkoala.abc" ]
  module_install_dir = "framework"
  subsystem_name = ace_engine_subsystem
  part_name = ace_engine_part
}

group("arkoala") {
    deps = [
      "$koala_path:arkoala_build"
    ]
}

# Use build system to build arkoala
action("arkoala_annotate") {
  outputs = [ "$target_out_dir/arkui-preprocessed" ]

  script = "../tools/annotate.py"

  args = [
    rebase_path("."),
    rebase_path("annotate-config.json")
  ]
}

action("arkoala_process") {
  outputs = [ "$target_out_dir/ets-arkui-preprocessed" ]

  script = "../../arkoala/process_arkoala.py"

  args = [
    rebase_path("."),
  ]

  deps = [
    ":arkoala_annotate",
    "../incremental/runtime:runtime_annotate"
  ]
}

generate_static_abc("components_compile_abc") {
  base_url = "./arkui-preprocessed"
  files = arkui_files
  paths_keys = arkui_path_keys
  paths_values = arkui_path_values
  ui_enable = "True"
  only_memo = "True"
  dependencies = [ ":arkoala_process" ]
  dst_file = target_out_dir + "/components_compile_abc"
  out_puts = [ target_out_dir + "/components_compile_abc/modules_static.abc" ]
}

ohos_copy("components_abc") {
  sources = [
    target_out_dir + "/components_compile_abc/modules_static.abc"
  ]
  outputs = [
    target_out_dir + "/components.abc"
  ]
  deps = [ ":components_compile_abc" ]
}