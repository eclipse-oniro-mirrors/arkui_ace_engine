{
    "$schema": "./schema.json",
    "TypePrefix": "Ark_",
    "LibraryPrefix": "",
    "OptionalPrefix": "Opt_",
    "GenerateUnused": false,
    "ApiKind": 10,
    "ApiVersion": 9999,
    "dumpSerialized": false,
    "ignoreMaterialized": [
        "AnimatableArithmetic",
        "CustomLayoutRoot",
        "DynamicNode",
        "GestureHandler",
        "LongPressGestureHandler",
        "PanGestureHandler",
        "PinchGestureHandler",
        "RotationGestureHandler",
        "SwipeGestureHandler",
        "TapGestureHandler",
        "UIGestureEvent",
        "MenuItemConfiguration",
        "WrappedBuilder",
        "TouchTestInfo",
        "TouchResult",
        "SectionOptions"
    ],
    "ignoreGenerics": [
        "arkui.component.common.AttributeModifier",
        "arkui.component.common.ContentModifier",
        "arkui.component.ContentModifier"
    ],
    "forceMaterialized": [
        "TapGestureInterface",
        "LongPressGestureInterface",
        "PanGestureInterface",
        "SwipeGestureInterface",
        "PinchGestureInterface",
        "RotationGestureInterface",
        "GestureGroupInterface",
        "BaseContext",
        "ClickEvent",
        "AccessibilityHoverEvent",
        "BaseEvent",
        "BaseGestureEvent",
        "FocusAxisEvent",
        "GestureEvent",
        "HoverEvent",
        "KeyEvent",
        "LongPressGestureEvent",
        "MouseEvent",
        "PanGestureEvent",
        "PinchGestureEvent",
        "RotationGestureEvent",
        "SwipeGestureEvent",
        "TapGestureEvent"
    ],
    "forceCallback": {
        "EditMenuOptions": [],
        "XComponentController": [
            "onSurfaceCreated",
            "onSurfaceChanged",
            "onSurfaceDestroyed"
        ],
        "DrawModifier": [
            "drawBehind",
            "drawContent",
            "drawFront"
        ],
        "CustomSpan": [
            "onMeasure",
            "onDraw"
        ]
    },
    "forceResource": [
	    "ContentModifier"
    ],
    "boundProperties": {
        "Checkbox": [
            "select"
        ],
        "CheckboxGroup": [
            "selectAll"
        ],
        "DatePicker": [
            "selected"
        ],
        "TimePicker": [
            "selected"
        ],
        "MenuItem": [
            "selected"
        ],
        "Panel": [
            "mode"
        ],
        "Radio": [
            "checked"
        ],
        "Rating": [
            "rating"
        ],
        "Search": [
            "value"
        ],
        "SideBarContainer": [
            "showSideBar"
        ],
        "Slider": [
            "value"
        ],
        "Stepper": [
            "index"
        ],
        "Swiper": [
            "index"
        ],
        "Tabs": [
            "index"
        ],
        "TextArea": [
            "text"
        ],
        "TextInput": [
            "text"
        ],
        "TextPicker": [
            "selected",
            "value"
        ],
        "Toggle": [
            "isOn"
        ],
        "AlphabetIndexer": [
            "selected"
        ],
        "Select": [
            "selected",
            "value"
        ],
        "BindSheet": [
            "isShow"
        ],
        "BindContentCover": [
            "isShow"
        ],
        "Refresh": [
            "refreshing"
        ],
        "GridItem": [
            "selected"
        ],
        "ListItem": [
            "selected"
        ]
    },
    "rootComponents": [
        "Root",
        "ComponentRoot",
        "CustomBuilderRoot",
        "CommonMethod",
        "SecurityComponentMethod",
        "CommonTransition",
        "CalendarAttribute",
        "ContainerSpanAttribute",
        "CustomLayoutRoot"
    ],
    "standaloneComponents": [
        "TextPickerDialog",
        "TimePickerDialog",
        "AlertDialog",
        "CanvasPattern",
        "WithThemeAttribute",
        "ToolBarItemAttribute"
    ],
    "parameterized": [
        "Indicator",
        "AttributeModifier",
        "AnimationRange",
        "SizeT",
        "PositionT",
        "Record"
    ],
    "builderClasses": [
        "Indicator",
        "SubTabBarStyle",
        "BottomTabBarStyle",
        "DotIndicator",
        "DigitIndicator"
    ],
    "components": {
        "customNodeTypes": [
            "CustomNode"
        ],
        "handWritten": [
            "LocalStorage",
            "SyncedPropertyOneWay",
            "SubscribedAbstractProperty",
            "SyncedPropertyTwoWay",
            "AttributeModifier",
            "AttributeUpdater",
            "AbstractProperty",
            "SubscribaleAbstract",
            "IPropertySubscriber",
            "ISinglePropertyChangeSubscriber",
            "ISinglePropertyChangeSubscriber",
            "PageTransitionEnterInterface",
            "PageTransitionExitInterface",
            "CommonTransition",
            "wrapBuilder",
            "ContentModifier",
            "CustomStyles",
            "applyStyles",
            "UIGestureEvent",
            "GestureModifier"
        ],
        "ignoreEntry": [
            "Optional",
            "AppStorage",
            "DataChangeListener",
            "DisturbanceFieldOptions",
            "EntryOptions",
            "Environment",
            "GestureGroupHandler",
            "IDataSource",
            "LazyForEachInterface",
            "LocalStorage",
            "PersistentStorage",
            "PositionT",
            "SizeT",
            "Storage",
            "SubscribedAbstractProperty",
            "SyncedPropertyOneWay",
            "SyncedPropertyTwoWay",
            "IMonitorValue"
        ],
        "ignoreEntryJava": [
            "AnimationRange",
            "EventTargetInfo",
            "GestureRecognizer",
            "GestureRecognizerJudgeBeginCallback",
            "Matrix2D",
            "ScrollAnimationOptions",
            "SheetDismiss",
            "SubTabBarStyle",
            "TextPickerDialog",
            "Dimension",
            "ScaleSymbolEffect",
            "ReplaceSymbolEffect",
            "BaseShape",
            "RectShape",
            "EllipseShape",
            "CircleShape",
            "BusinessError",
            "Error",
            "ErrorCallback",
            "getRectangleById",
            "edgeColors",
            "edgeWidths",
            "borderRadiuses"
        ],
        "ignoreComponents": [
            "Particle",
            "ForEach",
            "LazyForEach",
            "ContentSlot"
        ],
        "ignorePeerMethod": [
            "attributeModifier"
        ],
        "ignoreMethodArkts": [
            "testTupleNumberStringEnum",
            "testTupleOptional",
            "testTupleUnion"
        ],
        "invalidAttributes": [
            "ScrollableCommonMethod"
        ],
        "replaceThrowErrorReturn": [
            "NavPathStack"
        ]
    },
    "hooks": {
        "ButtonAttribute": {
            "contentModifier": {
                "hookName": "hookButtonContentModifier",
                "replaceImplementation": true
            }
        },
        "CommonMethod": {
            "id": {
                "hookName": "hookId",
                "replaceImplementation": false
            },
            "stateStyles": {
                "hookName": "hookStateStyleImpl",
                "replaceImplementation": true
            },
            "gestureModifier": {
                "hookName": "hookGestureModifier",
                "replaceImplementation": true
            }
        },
        "CheckboxAttribute": {
            "contentModifier": {
                "hookName": "hookCheckBoxContentModifier",
                "replaceImplementation": true
            }
        },
        "DataPanelAttribute": {
            "contentModifier": {
                "hookName": "hookDataPanelContentModifier",
                "replaceImplementation": true
            }
        },
        "GaugeAttribute": {
            "contentModifier": {
                "hookName": "hookGaugeContentModifier",
                "replaceImplementation": true
            }
        },
        "LoadingProgressAttribute": {
            "contentModifier": {
                "hookName": "hookLoadingProgressContentModifier",
                "replaceImplementation": true
            }
        },
        "ProgressAttribute": {
            "contentModifier": {
                "hookName": "hookProgressContentModifier",
                "replaceImplementation": true
            }
        },
        "RadioAttribute": {
            "contentModifier": {
                "hookName": "hookRadioContentModifier",
                "replaceImplementation": true
            }
        },
        "RatingAttribute": {
            "contentModifier": {
                "hookName": "hookRatingContentModifier",
                "replaceImplementation": true
            }
        },
        "SelectAttribute": {
            "menuItemContentModifier": {
                "hookName": "hookSelectContentModifier",
                "replaceImplementation": true
            }
        },
        "SliderAttribute": {
            "contentModifier": {
                "hookName": "hookSliderContentModifier",
                "replaceImplementation": true
            }
        },
        "TextClockAttribute": {
            "contentModifier": {
                "hookName": "hookTextClockContentModifier",
                "replaceImplementation": true
            }
        },
        "TextTimerAttribute": {
            "contentModifier": {
                "hookName": "hookTextTimerContentModifier",
                "replaceImplementation": true
            }
        },
        "ToggleAttribute": {
            "contentModifier": {
                "hookName": "hookToggleContentModifier",
                "replaceImplementation": true
            }
        },
        "waterFlowAttribute": {
            "setWaterFlowOptionsAttribute": {
                "hookName": "hookWaterFlowOptionsImpl",
                "replaceImplementation": true
            }
        }
    },
    "materialized": {
        "ignoreReturnTypes": [
            "Promise"
        ]
    },
    "cppPrefix": "GENERATED_",
    "serializer": {
        "ignore": [
            "Array",
            "Callback",
            "AttributeModifier",
            "Number",
            "String",
            "Function",
            "Optional",
            "RelativeIndexable",
            "StateStyles",
            "Callback"
        ]
    },
    "dummy": {
        "ignoreMethods": {
            "CommonMethod": [
                "onClick",
                "onClick0",
                "onClick1",
                "drawModifier"
            ],
            "EnvironmentBackend": [
                "isAccessibilityEnabled",
                "getColorMode",
                "getFontScale",
                "getFontWeightScale",
                "getLayoutDirection",
                "getLanguageCode"
            ],
            "EventEmulator": [
                "emitClickEvent"
            ],
            "RenderServiceNode": [
                "getNodeId"
            ],
            "ScreenshotService": [
                "requestScreenshot"
            ],
            "DrawModifier": [
                "invalidate",
                "setDrawBehind_callback",
                "setDrawContent_callback",
                "setDrawFront_callback"
            ]
        }
    },
    "patchMaterialized": {},
    "forceContext": [
        "LoadUserView",
        "MeasureLayoutAndDraw",
        "MeasureNode",
        "DrawNode",
        "TestCallIntNoArgs",
        "TestCallIntIntArraySum",
        "TestCallVoidIntArrayPrefixSum",
        "TestCallIntRecursiveCallback",
        "TestCallIntMemory"
    ],
    "moduleName": "arkui",
    "modules": {
        "arkui": {
            "name": "arkui",
            "packages": [""]
        }
    },
    "libraryNameMapping": { },
    "currentModulePackagesPaths": [
        { "package": "arkui.component", "path": "./component" },
        { "package": "arkui.stateManagement", "path": "./stateManagement" },
        { "package": "arkui", "path": "./" }
    ],
    "currentModuleExportedPackages": [
        "arkui.component",
        "internal.component.ets",
        "arkui.idlize"
    ],
    "globalPackages": [
        "idlize.stdlib",
        "org.openharmony.idlize.predefined",
        "org.openharmony.arkui"
    ]
}
