diff --git a/api/@ohos.base.static.d.ets b/api/@ohos.base.static.d.ets
index 3e22da2fd..8e8496ec5 100644
--- a/api/@ohos.base.static.d.ets
+++ b/api/@ohos.base.static.d.ets
@@ -111,5 +111,5 @@
   * };
   * this.context.startAbility(want);
   */
- export type RecordData = undefined | null | Object | Record<string, RecordData> | Array<RecordData>;
+ export type RecordData = undefined | null | Object;

\ No newline at end of file
diff --git a/api/arkui/component/column.static.d.ets b/api/arkui/component/column.static.d.ets
index f671d77ca..38dbf54a1 100644
--- a/api/arkui/component/column.static.d.ets
+++ b/api/arkui/component/column.static.d.ets
@@ -44,7 +44,7 @@ export interface ColumnOptions {
      * @syscap SystemCapability.ArkUI.ArkUI.Full
      * @since 20
      */
-    space?: string | number;
+    space?: SpaceType;
 }
 /**
  * Column constructor options.
@@ -61,7 +61,7 @@ export interface ColumnOptionsV2 {
      * @syscap SystemCapability.ArkUI.ArkUI.Full
      * @since 20
      */
-    space?: SpaceType;
+    doNotUseMe: boolean;
 }
 export declare interface ColumnAttribute extends CommonMethod {
     /**
diff --git a/api/arkui/component/common.static.d.ets b/api/arkui/component/common.static.d.ets
index 86edca87f..e7c3e1365 100644
--- a/api/arkui/component/common.static.d.ets
+++ b/api/arkui/component/common.static.d.ets
@@ -7356,13 +7356,13 @@ export declare interface SheetOptions extends BindOptions {
     /**
      * Defines sheet detents
      *
-     * @type { ?(SingleLengthDetent | DoubleLengthDetents | TripleLengthDetents) }
+     * @type { ?(TripleLengthDetents) }
      * @syscap SystemCapability.ArkUI.ArkUI.Full
      * @crossplatform
      * @atomicservice
      * @since 20
      */
-    detents?: SingleLengthDetent | DoubleLengthDetents | TripleLengthDetents;
+    detents?: TripleLengthDetents;
     /**
      * Background blur of the sheet. By default, there is no background blur.
      *
@@ -7748,7 +7748,7 @@ export declare interface SheetOptions extends BindOptions {
  * @atomicservice
  * @since 20
  */
-export type CustomStyles = (instance: CommonMethod) => void;
+export type CustomStyles = (instance: string) => void;
 /**
  * Component State Styles.
  *
@@ -10368,13 +10368,13 @@ export declare interface BackgroundOptions {
 /**
  * Defines the value of the custom property..
  *
- * @typedef { Object | undefined | Record<string, CustomProperty> } CustomProperty
+ * @typedef { Object | undefined } CustomProperty
  * @syscap SystemCapability.ArkUI.ArkUI.Full
  * @crossplatform
  * @atomicservice
  * @since 20
  */
-export declare type CustomProperty = Object | undefined | Record<string, CustomProperty>;
+export declare type CustomProperty = Object | undefined;
 export declare interface CommonMethod {
     /**
      * Sets the width of the component or its horizontal layout policy. By default, the
@@ -11113,7 +11113,7 @@ export declare interface CommonMethod {
      * @atomicservice
      * @since 20
      */
-    default onKeyEvent(event: Callback<KeyEvent, boolean> | undefined): this;
+    // default onKeyEvent(event: Callback<KeyEvent, boolean> | undefined): this;
     /**
      * Digital crown input.
      *
@@ -15396,4 +15396,4 @@ export declare function $$<T>(value: T): Bindable<T>;
  * @syscap SystemCapability.ArkUI.ArkUI.Full
  * @since 20
  */
-export declare function applyStyles<T extends CommonMethod>(this: T, customStyles: CustomStyles): T;
+export declare function applyStyles<T extends CommonMethod>(self: T, customStyles: CustomStyles): T;
diff --git a/api/arkui/component/lazyForEach.static.d.ets b/api/arkui/component/lazyForEach.static.d.ets
index 9b39b0399..b286afd01 100644
--- a/api/arkui/component/lazyForEach.static.d.ets
+++ b/api/arkui/component/lazyForEach.static.d.ets
@@ -19,6 +19,7 @@
  */
 
 import { Builder } from './builder';
+import { ItemGeneratorFunc, KeyGeneratorFunc } from './forEach';
 import { ComponentBuilder } from './../stateManagement/runtime';
 
 /**
@@ -472,30 +473,6 @@ export interface IDataSource<T> {
  */
 export interface LazyForEachAttribute {}
 
-/**
- * Define item generator function.
- *
- * @typedef { function } ItemGeneratorFunc<T>
- * @param { T } item - item in an array
- * @param { number } index - index corresponding to an array item.
- * @syscap SystemCapability.ArkUI.ArkUI.Full
- * @since 20
- */
-@Builder
-declare type ItemGeneratorFunc<T> = (item: T, index: number) => void;
-
-/**
- * Define key generator function.
- *
- * @typedef { function } KeyGeneratorFunc<T>
- * @param { T } item - item in an array
- * @param { number } index - index corresponding to an array item.
- * @returns {string} Character string generated based on item and index
- * @syscap SystemCapability.ArkUI.ArkUI.Full
- * @since 20
- */
-declare type KeyGeneratorFunc<T> = (item: T, index: number) => string;
-
 /**
  * Enter the value to obtain the LazyForEach.
  *
diff --git a/api/arkui/component/pluginComponent.static.d.ets b/api/arkui/component/pluginComponent.static.d.ets
index a9a9ed0b5..729c7b262 100644
--- a/api/arkui/component/pluginComponent.static.d.ets
+++ b/api/arkui/component/pluginComponent.static.d.ets
@@ -58,7 +58,7 @@ export interface PluginComponentTemplate {
  * @systemapi
  * @since 20
  */
-export type RecordData = undefined | null | Object | Record<string, RecordData> | Array<RecordData>;
+export type RecordData = undefined | null | Object;
 
 /**
  * Define options used to construct a plugin component.
diff --git a/api/arkui/component/relativeContainer.static.d.ets b/api/arkui/component/relativeContainer.static.d.ets
index 6dfb46e9a..3df0fd5de 100644
--- a/api/arkui/component/relativeContainer.static.d.ets
+++ b/api/arkui/component/relativeContainer.static.d.ets
@@ -246,7 +246,7 @@ export declare interface RelativeContainerAttribute extends CommonMethod {
      * @syscap SystemCapability.ArkUI.ArkUI.Full
      * @since 20
      */
-    default barrier(barrierStyle: Array<LocalizedBarrierStyle> | undefined): this;
+    //default barrier(barrierStyle: Array<LocalizedBarrierStyle> | undefined): this;
     /**
      * Set the attribute modifier
      *
diff --git a/api/arkui/component/sidebar.static.d.ets b/api/arkui/component/sidebar.static.d.ets
index 9cd26d0a5..24154755b 100644
--- a/api/arkui/component/sidebar.static.d.ets
+++ b/api/arkui/component/sidebar.static.d.ets
@@ -22,7 +22,7 @@
 
 import { Resource } from '../../global/resource';
 import { Length, ResourceColor, Dimension } from './units';
-import { CommonMethod, PixelMap, Bindable } from './common';
+import { CommonMethod, PixelMap, Bindable, DividerStyle } from './common';
 import { memo, ComponentBuilder } from './../stateManagement/runtime';
 
 /**
@@ -179,53 +179,6 @@ export declare interface ButtonStyle {
   icons?: ButtonIconOptions;
 }
 
-/**
- * Provides an interface for the style of a divider including stroke width, color, start margin
- * and end margin
- *
- * @interface DividerStyle
- * @syscap SystemCapability.ArkUI.ArkUI.Full
- * @since 20
- */
-export interface DividerStyle {
-  /**
-   * Define the stroke width of the divider
-   *
-   * @type { Length }
-   * @default 1vp
-   * @syscap SystemCapability.ArkUI.ArkUI.Full
-   * @since 20
-   */
-  strokeWidth: Length;
-
-  /**
-   * Define the color of the divider
-   *
-   * @type { ?ResourceColor }
-   * @syscap SystemCapability.ArkUI.ArkUI.Full
-   * @since 20
-   */
-  color?: ResourceColor;
-
-  /**
-   * Define the start margin of the divider
-   *
-   * @type { ?Length }
-   * @syscap SystemCapability.ArkUI.ArkUI.Full
-   * @since 20
-   */
-  startMargin?: Length;
-
-  /**
-   * Define the end margin of the divider
-   *
-   * @type { ?Length }
-   * @syscap SystemCapability.ArkUI.ArkUI.Full
-   * @since 20
-   */
-  endMargin?: Length;
-}
-
 /**
  * The attribute function of sidebar
  *
diff --git a/api/arkui/component/toggle.static.d.ets b/api/arkui/component/toggle.static.d.ets
index 9f018f7b8..26ab266d8 100644
--- a/api/arkui/component/toggle.static.d.ets
+++ b/api/arkui/component/toggle.static.d.ets
@@ -118,7 +118,7 @@ export declare interface ToggleConfiguration extends CommonConfiguration<ToggleC
      * @syscap SystemCapability.ArkUI.ArkUI.Full
      * @since 20
      */
-    enabled: boolean;
+    toggleEnabled: boolean;
     /**
      * Trigger toggle select change
      *
diff --git a/api/arkui/component/uiExtensionComponent.static.d.ets b/api/arkui/component/uiExtensionComponent.static.d.ets
index 6a71e3246..bf5c00604 100644
--- a/api/arkui/component/uiExtensionComponent.static.d.ets
+++ b/api/arkui/component/uiExtensionComponent.static.d.ets
@@ -23,16 +23,7 @@ import { CommonMethod, TerminationInfo } from './common';
 import { ComponentContent } from '../ComponentContent';
 import { memo, ComponentBuilder } from './../stateManagement/runtime';
 import { AttributeModifier, CommonMethod } from './common';
-
-/**
- * Defines RecordData.
- * 
- * @typedef { undefined | null | Object | Record<string, RecordData> | Array<RecordData> } RecordData
- * @syscap SystemCapability.ArkUI.ArkUI.Full
- * @systemapi
- * @since 20
- */
-export type RecordData = undefined | null | Object | Record<string, RecordData> | Array<RecordData>;
+import { RecordData } from './pluginComponent';
 
 /**
  * Enumeration of different types of DpiFollowStrategy.
