# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

if (is_standard_system) {
  module_output_path = "ace_engine/adapter/ohos/osal"
} else {
  module_output_path = "ace_engine_full/adapter/ohos/osal"
}

ohos_unittest("EventReportTest") {
  module_out_path = module_output_path

  sources = [
    "../mock/mock_event_report_data.cpp",
    "event_report_test.cpp",
  ]
  configs = [ "$ace_root:ace_test_config" ]

  deps = [ "$ace_root/build:ace_ohos_unittest_base" ]

  part_name = ace_engine_part
}

if (accessibility_enable) {
  ohos_unittest("JsAccessibilityManagerTest") {
    module_out_path = module_output_path

    sources = [ "js_accessibility_manager_test.cpp" ]

    configs = [ "$ace_root:ace_test_config" ]

    deps = [
      "$ace_root/build:ace_ohos_unittest_base",
      "//third_party/googletest:gmock_main",
      "//third_party/googletest:gtest_main",
    ]

    external_deps = [
      "accessibility:accessibilityclient",
      "accessibility:accessibilityconfig",
    ]

    part_name = ace_engine_part
  }
}

ohos_unittest("AnrThreadTest") {
  module_out_path = module_output_path

  sources = [ "anr_thread_test.cpp" ]

  configs = [ "$ace_root:ace_test_config" ]

  deps = [ "$ace_root/build:ace_ohos_unittest_base" ]

  part_name = ace_engine_part
}

ohos_unittest("ExceptionHandlerTest") {
  module_out_path = module_output_path

  sources = [ "exception_handler_test.cpp" ]

  configs = [ "$ace_root:ace_test_config" ]

  deps = [ "$ace_root/build:ace_ohos_unittest_base" ]

  part_name = ace_engine_part
}

group("unittest") {
  testonly = true
  deps = []

  deps += [
    ":AnrThreadTest",
    ":EventReportTest",
    ":ExceptionHandlerTest",
  ]

  if (accessibility_enable) {
    deps += [ ":JsAccessibilityManagerTest" ]
  }
}
