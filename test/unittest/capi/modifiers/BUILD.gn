# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

declare_args() {
  capi_theme_debug = false
}

ace_unittest("capi_all_modifiers_test") {
  type = "new"
  module_output = "capi"
  sources = [
    # place here your UT source code
    "blank_modifier_test.cpp",
    "button_modifier_resources_test.cpp",
    "button_modifier_test.cpp",
    "checkboxgroup_modifier_test.cpp",
    "circle_modifier_test.cpp",
    "common_method_modifier_test.cpp",
    "common_shape_method_modifier_resources_test.cpp",
    "common_shape_method_modifier_test.cpp",
    "counter_modifier_test.cpp",
    "divider_modifier_test.cpp",
    "form_link_modifier_test.cpp",
    "grid_item_modifier_test.cpp",
    "grid_modifier_callbacks_test.cpp",
    "grid_modifier_test.cpp",
    "line_modifier_test.cpp",
    "list_item_group_modifier_test.cpp",
    "list_item_modifier_test.cpp",
    "list_modifier_test.cpp",
    "loading_progress_modifier_test.cpp",
    "menu_item_group_modifier_test.cpp",
    "menu_item_modifier_test.cpp",
    "menu_modifier_test.cpp",
    "modifiers_test_utils.cpp",
    "nav_router_modifier_test.cpp",
    "navigation_modifier_test.cpp",
    "navigator_modifier_test.cpp",
    "path_modifier_test.cpp",
    "radio_modifier_test.cpp",
    "rect_modifier_test.cpp",
    "relative_container_modifier_test.cpp",
    "scroll_modifier_test.cpp",
    "search_modifier_resources_test.cpp",
    "search_modifier_test.cpp",
    "select_modifier_test.cpp",
    "shape_modifier_test.cpp",
    "swiper_modifier_test.cpp",
    "swiper_modifier_test2.cpp",
    "tab_content_modifier_test.cpp",
    "tabs_modifier_test.cpp",
    "text_area_modifier_test.cpp",
    "text_modifier_test.cpp",
  ]
  extra_deps = []
  extra_deps += [
    "${ace_root}/frameworks/core/interfaces/native:ace_core_interfaces_native_node_linux_unittest",
    "../stubs:capi-ut-stubs",
  ]
  if (capi_theme_debug) {
    defines = [ "CAPI_BACKTRACE" ]
    sources += [ "unwind_utils.cpp" ]
    external_deps = [ "libunwind:libunwind" ]
    extra_deps += [
      ":copy_libunwind",
      ":copy_libunwind_unstripped",
    ]
  }
}

if (capi_theme_debug) {
  copy("copy_libunwind") {
    testonly = true
    sources = [ root_out_dir + "/thirdparty/libunwind/libunwind.so" ]
    outputs = [ root_out_dir + "/tests/unittest/ace_engine/capi/libunwind.so" ]
    external_deps = [ "libunwind:libunwind" ]
  }
  copy("copy_libunwind_unstripped") {
    testonly = true
    sources = [ root_out_dir +
                "/lib.unstripped/clang_x64/thirdparty/libunwind/libunwind.so" ]
    outputs = [ root_out_dir + "/exe.unstripped/clang_x64/tests/unittest/ace_engine/capi/libunwind.so" ]
    external_deps = [ "libunwind:libunwind" ]
  }
}

group("capi_modifiers_unittest") {
  testonly = true
  deps = [ ":capi_all_modifiers_test" ]
}
