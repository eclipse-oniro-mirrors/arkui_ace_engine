# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

pattern_test_output_path = "ace_engine/components"
gestures_test_output_path = "ace_engine/gestures"
event_test_output_path = "ace_engine/events"
base_test_output_path = "ace_engine/base"
syntax_test_output_path = "ace_engine/syntaxs"
image_test_output_path = "ace_engine/image"
basic_test_output_path = "ace_engine/basic"
manager_test_output_path = "ace_engine/manager"
interface_test_output_path = "ace_engine/interfaces"
accessibility_test_output_path = "ace_engine/accessibility"
property_test_output_path = "ace_engine/property"
layout_test_output_path = "ace_engine/layout"
svg_test_output_path = "ace_engine/svg"
render_test_output_path = "ace_engine/render"

template("ace_unittest") {
  forward_variables_from(invoker, "*")

  type = "components"
  ace_animation = false
  flutter_skia = false
  render = false
  ace_unittest_out_path = "ace_engine/$type"
  ace_unittest_name = target_name
  ace_unittest_config = [ "$ace_root/test/unittest:ace_unittest_config" ]
  ace_external_deps = []
  flutter_sources = []
  flutter_external_deps = []
  ace_unittest_deps = [
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "//third_party/googletest:gmock",
  ]

  # temporary support
  if (defined(invoker.external_deps)) {
    ace_external_deps += external_deps
  }

  if (defined(invoker.render)) {
    render = invoker.render
  }

  if (defined(invoker.type)) {
    type = invoker.type
    ace_unittest_out_path = "ace_engine/$type"
  }

  if (defined(invoker.ace_animation)) {
    ace_animation = invoker.ace_animation
  }

  if (defined(invoker.flutter_skia)) {
    flutter_skia = invoker.flutter_skia
  }

  if (ace_animation) {
    ace_unittest_deps += [ "$ace_root/test/unittest:ace_core_animation" ]
  }

  if (render) {
    ace_unittest_deps += [ "$graphic_2d_path/rosen/modules/render_service_client:librender_service_client" ]
  }

  if (flutter_skia) {
    if (ace_use_new_skia) {
      flutter_sources +=
          [ "$ace_root/test/mock/core/common/mock_flutter_window.cpp" ]
      ace_unittest_deps += [
        "$ace_flutter_engine_root:flutter_engine_common_ohos",
        "$ace_flutter_engine_root/libtxt:thirdparty_lib_txt_ohos",
        "$skia_root_new:skia_ohos",
      ]
      ace_unittest_config += [ "$ace_flutter_engine_root:flutter_config" ]
      flutter_external_deps = [ "eventhandler:libeventhandler" ]
    } else {
      ace_unittest_deps += [
        "$ace_flutter_engine_root:third_party_flutter_engine_ohos",
        "$ace_flutter_engine_root/skia:ace_skia_ohos",
      ]
    }
  }

  if (type == "components") {
    ohos_unittest(ace_unittest_name) {
      module_out_path = ace_unittest_out_path

      sources = []
      sources += invoker.sources
      sources += flutter_sources

      deps = ace_unittest_deps
      deps += [
        "$ace_root/frameworks/core/components/theme:build_theme_code",
        "$ace_root/test/unittest:ace_base",
        "$ace_root/test/unittest:ace_components_base",
        "$ace_root/test/unittest:ace_components_event",
        "$ace_root/test/unittest:ace_components_extra",
        "$ace_root/test/unittest:ace_components_gestures",
        "$ace_root/test/unittest:ace_components_layout",
        "$ace_root/test/unittest:ace_components_mock",
        "$ace_root/test/unittest:ace_components_property",
        "$ace_root/test/unittest:ace_components_render",
        "$ace_root/test/unittest:ace_components_syntax",
      ]

      configs = []
      configs += ace_unittest_config

      external_deps = []
      external_deps += ace_external_deps
      external_deps += flutter_external_deps
    }
  } else if (type == "basic/common") {
    ohos_unittest(ace_unittest_name) {
      module_out_path = ace_unittest_out_path
      sources = []
      sources += invoker.sources
      sources += flutter_sources

      deps = ace_unittest_deps
      deps += [ "$ace_root/test/unittest:ace_base" ]

      configs = []
      configs = ace_unittest_config

      external_deps = []
      external_deps += ace_external_deps
      external_deps += flutter_external_deps
    }
  } else {
    assert(false)
  }
}
